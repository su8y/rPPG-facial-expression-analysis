import type {UseQueryResult} from "@tanstack/react-query";import type {ReactNode} from "react";import LoadingIndicator from "./LoadingIndicator.tsx";import ErrorDisplay from "./ErrorDisplay.tsx";interface QueryLayoutProps<TData> {    queryResult: UseQueryResult<TData, Error>;    children: (data: TData) => ReactNode;}export function QueryLayout<TData>({                                       queryResult,                                       children                                   }: QueryLayoutProps<TData>) {    const {data, error, isLoading, isError, refetch} = queryResult;    if (isLoading) {        return <LoadingIndicator/>;    }    if (isError) {        return <ErrorDisplay title={"데이터 불러오기 실패"} message={error.message} onRetry={refetch}/>;    }    if (!data) {        return <>데이터가 없습니다.</>;    }    return <>{children(data)}</>;}