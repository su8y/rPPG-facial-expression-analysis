import type {DashboardData} from "../types/rppg.type.ts";export const getDashboardData = async (): Promise<DashboardData> => {    // const dashboardUrl = import.meta.env.VITE_DASHBOARD_API as string;    // const response = await axiosInstance.get(dashboardUrl);    return Promise.resolve({            "previousRPPG": {                "hr": "72 bpm",                "hrValues": [68, 70, 72, 75, 73, 71],                "hrv": "45 ms",                "emotion": "Neutral",                "stress": "Low",                "emotionResult": {                    "Angry": 0.05,                    "Disgusted": 0.01,                    "Fearful": 0.02,                    "Happy": 0.15,                    "Neutral": 0.75,                    "Sad": 0.01,                    "Surprised": 0.01                }            },            "currentRPPG": {                "hr": "85 bpm",                "hrValues": [82, 85, 97, 84, 86, 83],                "hrv": "38 ms",                "emotion": "Happy",                "stress": "Medium",                "emotionResult": {                    "Angry": 0.01,                    "Disgusted": 0.0,                    "Fearful": 0.01,                    "Happy": 0.85,                    "Neutral": 0.1,                    "Sad": 0.01,                    "Surprised": 0.02                }            },            "depressionScore": {                "previous": 4,                "current": 6            },            "detailed": {                "empathy": {                    "emotionRows": [                        {                            "aiAnalysis": {                                "emotion": "Sad",                                "percentage": 0.62                            },                            "myEmotion": "Neutral"                        },                        {                            "aiAnalysis": {                                "emotion": "Happy",                                "percentage": 0.85                            },                            "myEmotion": "Happy"                        }                    ],                    "empathyScores": [                        {                            "before": 20,                            "after": 42                        },                        {                            "before": 35,                            "after": 50                        }                    ]                },                "mimic": {                    "matchScores": [                        {                            "emotion": "Sad",                            "before": 20,                            "after": 42                        },                        {                            "emotion": "Happy",                            "before": 35,                            "after": 50                        }                    ]                },                "recognition": {                    "recognitionRows": [                        {                            "proposedEmotion": "Sad",                            "myEmotion": "Sad"                        },                        {                            "proposedEmotion": "Happy",                            "myEmotion": "Happy"                        }                    ],                    "accuracyBefore": 20,                    "accuracyAfter": 42,                    "responseTime": 250                },                "replication": {                    "replicationRows": [                        {                            "proposedEmotion": "Sad",                            "aiAnalysis": {                                "emotion": "Sad",                                "previous": 0.85,                                "current": 0.95                            }                        }                    ]                }            }        }    );};